generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  email        String        @unique
  avatar       String?
  password     String
  guide        Guide?
  Reservations Reservation[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Guide {
  id           Int           @id @default(autoincrement())
  fullname     String
  birthdate    String
  height       String
  address      String
  phone        String
  photo        String
  selfIntro    String
  language     String? //추 후 postresql 변경 후, Json으로 교체
  isApproved   Boolean       @default(false)
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int           @unique
  reservations Reservation[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  guideProfile GuideProfile?
}

model GuideProfile {
  id          Int      @id @default(autoincrement())
  guide       Guide    @relation(fields: [guideId], references: [id], onDelete: Cascade)
  guideId     Int      @unique
  photos      File[]
  personality String
  guideIntro  String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Reservation {
  id           Int      @id @default(autoincrement())
  guide        Guide    @relation(fields: [guideId], references: [id], onDelete: Cascade)
  guideId      Int
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  startTime    DateTime
  endTime      DateTime
  guideConfirm Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt()
}

model File {
  id             Int          @id @default(autoincrement())
  fileUrl        String
  guideProfile   GuideProfile @relation(fields: [guideProfileId], references: [id], onDelete: Cascade)
  guideProfileId Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}
